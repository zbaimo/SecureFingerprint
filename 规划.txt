🛡 项目规划：访问控制器（Go + WebUI）
🎯 核心目标

采集访问信息（IP、UA、设备、网络类型、登录状态等）

生成稳定的用户指纹（16 进制编码）

行为分析（频率、路径分布、异常模式）

打分系统（正常访问加分，异常访问扣分）

风险控制（限速、验证、封禁）

WebUI 管理（配置、监控、日志可视化）
⚙️ 功能模块说明
1. Collector（采集器）

获取 IP、User-Agent、Referer

解析设备类型、网络类型（移动/宽带/代理）

登录状态（cookie/session）

2. Fingerprint（指纹生成）

将收集的数据进行 hash → 16 进制编码

确保指纹在一定范围内稳定（不因小变动而完全不同）

3. Scorer（打分系统）

初始分数：100

正常访问 +1（上限 100）

短时间过多请求 -10

异常 UA / 高危 IP 段 -20

封禁阈值：分数 ≤ 0

4. Analyzer（行为分析）

短时间内访问次数

是否频繁请求相同路径

是否有明显爬虫行为

5. Limiter（限制器）

轻度异常 → 限速（延迟响应）

中度异常 → 人机验证（验证码）

严重异常 → 封禁一段时间

6. WebUI

技术选型：Vue.js / React

模块：

Dashboard：用户访问情况、实时打分、封禁统计

配置中心：阈值（打分规则、封禁时长、限速规则）

日志：访问日志查询（支持条件筛选）

用户详情：指纹详情、历史行为、打分曲线

🚀 技术选型

后端：Go (Gin/Chi/Fiber)

存储：Redis（短期行为）、MySQL（长期日志）

前端：Vue3 + Element Plus

部署：Docker Compose